name: CI

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: ${{ vars.NAME || 'test_db' }}  # Имя базы данных
          POSTGRES_USER: ${{ vars.USER || 'test_user' }}  # Пользователь
          POSTGRES_PASSWORD: ${{ vars.PASSWORD || 'test_password' }}  # Пароль
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Load environment variables from .env
        run: |
          echo "NAME=$(grep NAME .env | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "USER=$(grep USER .env | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "PASSWORD=$(grep PASSWORD .env | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "HOST=$(grep HOST .env | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "PORT=$(grep PORT .env | cut -d '=' -f2)" >> $GITHUB_ENV

      - name: Run migrations
        env:
          DB_NAME: ${{ env.NAME }}
          DB_USER: ${{ env.USER }}
          DB_PASSWORD: ${{ env.PASSWORD }}
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          python manage.py migrate

      - name: Run tests
        env:
          DB_NAME: ${{ env.NAME }}
          DB_USER: ${{ env.USER }}
          DB_PASSWORD: ${{ env.PASSWORD }}
          DB_HOST: localhost
          DB_PORT: 5432
        run: |
          python manage.py test