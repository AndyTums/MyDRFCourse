name: CI/CD Pipeline

on:
  push:
    branches:
      - feature_1
  pull_request:
    branches:
      - feature_1

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        # Указываем имя тестовой базы, имя и пароль пользователя в открытом виде,
        # ведь эта база будет работать только во время прогона тестов
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: MyDRFCourse
        ports:
          - 5432:5432
        # Эта конструкция описывает проверку готовности сервиса postgres
        # Если её не будет, то тесты могут запуститься раньше, чем сервер PostgreSQL
        # В результате тесты опять решат, что базы нет, — и упадут
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5


    steps:
    # Проверяем репозиторий
    - name: Checkout code
      uses: actions/checkout@v3

    # Устанавливаем Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    # Устанавливаем зависимости проекта
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Проверка кода
    - name: Run tests
      run: |
          python manage.py test
      env:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: MyDRFCourse
        DB_HOST: localhost
        DB_PORT: 5432


#  deploy:
#    name: Deploy to Server
#    runs-on: ubuntu-latest
#    needs: test
#
#    steps:
#    # Проверяем репозиторий
#    - name: Checkout code
#      uses: actions/checkout@v3
#
#    # Устанавливаем Python
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: 3.12
#
#    # Деплой на сервер с использованием пароля
#    - name: Deploy to Server
#      env:
#        HOST: ${{ secrets.SERVER_HOST }}          # IP-адрес
#        USERNAME: ${{ secrets.SERVER_USER }}      # Пользователь для SSH
#        PASSWORD: ${{ secrets.SERVER_PASSWORD }}  # Пароль для SSH
#        PROJECT_DIR: ${{ secrets.SERVER_PROJECT_DIR }}  # Путь к проекту на сервере
#      run: |
#        sudo apt-get update && sudo apt-get install -y sshpass
#        sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
#          cd $PROJECT_DIR
#          git pull origin feature_1
#          source venv/bin/activate
#          pip install -r requirements.txt
#          python3 manage.py migrate
#        EOF